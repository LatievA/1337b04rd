version: '3.8'

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${DB_USER:-hacker}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-board}
      POSTGRES_DB: ${DB_NAME:-1337b04rd}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./internal/adapters/db/migrations/init.sql:/docker-entrypoint-initdb.d/init.sql

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pg.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      db:
        condition: service_healthy

  triples:
    build:
      context: ~/alem_backend/triple-s
    ports:
      - "8080:8080"
    volumes:
      - triples-data:/app/data
    environment:
      PORT: 8080
      STORAGE_PATH: /app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build: .
    ports:
      - "${SERVER_PORT:-8081}:8081"
    depends_on:
      db:
        condition: service_healthy
      triples:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-1337b04rd}
      DB_USER: ${DB_USER:-hacker}
      DB_PASSWORD: ${DB_PASSWORD:-board}
      SERVER_PORT: ${SERVER_PORT:-8081}
      S3_BASE_URL: http://triples:8080
      S3_PUBLIC_URL: http://localhost:8080
    restart: unless-stopped

volumes:
  pgdata:
  triples-data: